{"version":3,"sources":["store/game/atoms.js","layouts/Main.styles.js","layouts/Main.js","assets/images/Battleship_Background_1920x1080.jpg","theme.js","store/game/selectors.js","components/Board/BoardCell.js","components/Board/index.js","components/Board/StyledButton.js","components/Board/BoardItem.js","components/Stats/Indicator.js","components/Stats/index.js","utils/constants.js","utils/helpers.js","utils/ship.js","utils/game.js","components/Setting.js","components/PlayAgainButton.js","components/GameOverDialog.js","pages/Home.js","pages/Games.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["game","isActive","maxShotsNumber","positions","ships","games","infinity","gameIsActiveState","atom","key","default","gameMaxShotsNumberState","gamePositionsState","gameShipsState","gameInfinityState","gameGamesState","useStyles","makeStyles","theme","createStyles","wrapper","display","aside","width","sidebar","position","top","spacing","content","marginLeft","items","name","route","Main","children","location","useLocation","history","useHistory","setGameIsActive","useSetRecoilState","classes","Box","className","p","textAlign","Paper","fontSize","mb","Typography","variant","color","process","map","item","my","Button","pathname","size","fullWidth","onClick","page","push","pt","component","Date","getFullYear","typography","fontFamily","join","props","MuiButton","disableElevation","palette","type","background","paper","primary","main","secondary","error","overrides","MuiCssBaseline","body","backgroundImage","BodyBackground","backgroundSize","backgroundPosition","backgroundAttachment","root","borderRadius","MuiPaper","rounded","gameStatsSelector","selector","get","numberOfShotsPlayed","filter","status","length","hits","downedShipsNumber","gameIsGameOverSelector","box","border","borderWidth","undefined","borderStyle","borderColor","height","BoardCell","justifyContent","alignItems","Board","headers","boardWidth","cols","pr","rows","head","flexWrap","maxWidth","withStyles","boxShadow","padding","minWidth","opacity","margin","text","zIndex","backgroundColor","left","right","bottom","animation","textSecondary","textPrimary","icon","BoardItem","React","useState","showIcon","setShowIcon","find","option","handleIcon","StyledButton","onMouseEnter","onMouseLeave","disabled","Indicator","description","gutterBottom","mt","Stats","useRecoilValue","BOARD_ROWS","BOARD_COLS","Array","keys","SHIPS","getRandomItemFromList","list","max","getRandomNumber","min","Math","floor","random","getShip","axes","orientation","helpers","isVertical","listByOrientationType","row","col","axis","forEach","success","getAllPositions","reduce","total","createGame","data","id","round","toString","date","getRandomShips","boardPositions","index","ship","isValid","split","includes","levelItems","label","value","Setting","setGamePositions","setMaxShotsNumber","setGameShips","attempts","setAttempts","level","setLevel","Divider","onSubmit","event","preventDefault","Number","FormControl","TextField","placeholder","onChange","parseFloat","target","py","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","PlayAgainButton","setGames","stats","startIcon","GameOverDialog","Dialog","open","aria-labelledby","aria-describedby","PaperProps","style","DialogTitle","px","DialogContent","action","handleClick","messages","Home","gameIsActive","useRecoilState","gamePositions","gameShips","isGameOver","enqueueSnackbar","useSnackbar","shot","getShipByShot","gamePosition","handleShot","ml","Games","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","toLocaleString","NotFound","App","muiTheme","createMuiTheme","ThemeProvider","CssBaseline","path","pages","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71b3c377.chunk.js","sourcesContent":["import { atom } from 'recoil'\nconst infinity = -1\nconst game = {\n  isActive: false,\n  maxShotsNumber: infinity,\n  positions: [],\n  ships: [],\n  games: [],\n  infinity\n}\n\nexport const gameIsActiveState = atom({\n  key: 'gameIsActiveState',\n  default: game.isActive\n})\n\nexport const gameMaxShotsNumberState = atom({\n  key: 'gamemaxShotsNumberState',\n  default: game.maxShotsNumber\n})\n\nexport const gamePositionsState = atom({\n  key: 'gamePositionsState',\n  default: game.positions\n})\n\nexport const gameShipsState = atom({\n  key: 'gameShipsState',\n  default: game.ships\n})\n\nexport const gameInfinityState = atom({\n  key: 'gameInfinityState',\n  default: game.infinity\n})\n\nexport const gameGamesState = atom({\n  key: 'gameGamesState',\n  default: game.games\n})\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\nconst aside = 330\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    wrapper: {\n      display: 'flex'\n    },\n    aside: {\n      width: aside\n    },\n    sidebar: {\n      position: 'sticky',\n      top: theme.spacing(3)\n    },\n    content: {\n      width: `calc(100% - ${aside}px)`,\n      marginLeft: theme.spacing(3)\n    }\n  })\n)\n","import PropTypes from 'prop-types'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useSetRecoilState } from 'recoil'\nimport { gameIsActiveState } from '../store/game/atoms'\nimport { Box, Button, Paper, Typography } from '@material-ui/core'\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat'\nimport { useStyles } from './Main.styles'\n\nconst items = [\n  { name: 'Board', route: '/' },\n  { name: 'Games', route: '/games' }\n]\n\nconst Main = ({ children }) => {\n  const location = useLocation()\n  const history = useHistory()\n  const setGameIsActive = useSetRecoilState(gameIsActiveState)\n  const isCurrentRoute = (route) => route === location.pathname\n  const classes = useStyles()\n  const handlePage = (page) => {\n    setGameIsActive(false)\n    history.push(page)\n  }\n  return (\n    <Box className={classes.wrapper} p={3}>\n      <Box className={classes.aside} textAlign=\"center\">\n        <Paper className={classes.sidebar}>\n          <Box p={3}>\n            <DirectionsBoatIcon fontSize=\"large\" />\n            <Box mb={3}>\n              <Typography variant=\"h5\" color=\"secondary\">\n                {process.env.REACT_APP_NAME}\n              </Typography>\n            </Box>\n            {items.map(item => (\n              <Box my={1.5} key={item.name}>\n                <Button\n                  color=\"default\"\n                  variant={isCurrentRoute(item.route) ? 'contained' : 'outlined'}\n                  size=\"large\"\n                  fullWidth\n                  onClick={() => handlePage(item.route)}\n                >\n                  {item.name}\n                </Button>\n              </Box>\n            ))}\n            <Box pt={2}>\n              <Typography variant=\"caption\">\n                {process.env.REACT_APP_AUTHOR}\n                <Box component=\"span\" color=\"secondary.main\"> &copy; </Box>\n                {(new Date()).getFullYear()}\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n      <Box className={classes.content}>\n        {children}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Main\n\nMain.propTypes = {\n  children: PropTypes.element.isRequired\n}\n","export default __webpack_public_path__ + \"static/media/Battleship_Background_1920x1080.2e2018e3.jpg\";","import BodyBackground from './assets/images/Battleship_Background_1920x1080.jpg'\n\nconst theme = {\n  typography: {\n    fontFamily: [\n      '\"Sigmar One\"',\n      'Roboto',\n      'Arial',\n      'sans-serif'\n    ].join(','),\n    fontSize: 17\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true\n    }\n  },\n  palette: {\n    type: 'dark',\n    background: {\n      paper: 'rgba(0, 0, 0, 0.6)'\n    },\n    primary: {\n      main: '#00ffd1'\n    },\n    secondary: {\n      main: '#ffbe00'\n    },\n    error: {\n      main: '#f00'\n    }\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        body: {\n          backgroundImage: `url(${BodyBackground})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundAttachment: 'fixed'\n        }\n      }\n    },\n    MuiButton: {\n      root: {\n        borderRadius: 35\n      }\n    },\n    MuiPaper: {\n      rounded: {\n        borderRadius: 20\n      }\n    }\n  }\n}\n\nexport default theme\n","import { selector } from 'recoil'\nimport {\n  gameMaxShotsNumberState,\n  gamePositionsState,\n  gameShipsState,\n  gameInfinityState\n} from './atoms'\n\nexport const gameStatsSelector = selector({\n  key: 'gameStatsSelector',\n  get: ({ get }) => {\n    const infinity = get(gameInfinityState)\n    const maxShotsNumber = get(gameMaxShotsNumberState)\n    const positions = get(gamePositionsState)\n    const ships = get(gameShipsState)\n    const numberOfShotsPlayed = positions.filter(({ status }) => status !== 'none').length\n    const hits = positions.filter(({ status }) => status === 'success').length\n    const downedShipsNumber = ships.filter(({ size, hits }) => size === hits).length\n\n    return {\n      maxShotsNumber: maxShotsNumber === infinity ? 'Infinity' : maxShotsNumber,\n      numberOfShotsPlayed,\n      hits,\n      downedShipsNumber\n    }\n  }\n})\n\nexport const gameIsGameOverSelector = selector({\n  key: 'gameIsGameOverSelector',\n  get: ({ get }) => {\n    const ships = get(gameShipsState)\n    const downedShipsNumber = ships.filter(({ size, hits }) => size === hits).length\n    const allTheShipsHaveBeenShotDown = downedShipsNumber === ships.length\n    if (allTheShipsHaveBeenShotDown) return true\n\n    const maxShotsNumber = get(gameMaxShotsNumberState)\n    const infinity = get(gameInfinityState)\n    const positions = get(gamePositionsState)\n    const numberOfShotsPlayed = positions.filter(({ status }) => status !== 'none').length\n    if (maxShotsNumber !== infinity && numberOfShotsPlayed >= maxShotsNumber) return true\n\n    return false\n  }\n})\n","import PropTypes from 'prop-types'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    box: ({ border }) => ({\n      borderWidth: border ? 1 : undefined,\n      borderStyle: border ? 'solid' : undefined,\n      borderColor: theme.palette.primary.main,\n      borderRadius: 8,\n      width: 55,\n      height: 55\n    })\n  })\n)\n\nconst BoardCell = ({ border, children }) => {\n  const classes = useStyles({ border })\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      className={classes.box}\n      color=\"primary.main\"\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default BoardCell\n\nBoardCell.propTypes = {\n  children: PropTypes.node,\n  border: PropTypes.bool\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Paper } from '@material-ui/core'\nimport BoardCell from './BoardCell'\n\nconst Board = ({ headers, children }) => {\n  const boxWidth = 55\n  const boardWidth = boxWidth * headers.cols.length\n\n  return (\n    <Paper>\n      <Box display=\"flex\" pt={2} pr={2}>\n        <Box width={boxWidth}>\n          {headers.rows.map(head => (\n            <BoardCell key={head}>\n              {head}\n            </BoardCell>)\n          )}\n        </Box>\n        <Box>\n          <Box display=\"flex\" flexWrap=\"wrap\" maxWidth={boardWidth}>\n            {children}\n          </Box>\n          <Box display=\"flex\">\n            {headers.cols.map(head => (\n              <BoardCell key={head}>\n                {head}\n              </BoardCell>)\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Board\n\nBoard.propTypes = {\n  children: PropTypes.node.isRequired,\n  headers: PropTypes.object\n}\n","import { withStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\n\nexport default withStyles((theme) => ({\n  root: {\n    display: 'flex',\n    boxShadow: 'none',\n    padding: 0,\n    minWidth: 'auto',\n    width: '100%',\n    height: '100%',\n    color: 'white',\n    borderRadius: 0,\n    fontSize: 35\n  },\n  '@keyframes zoom': {\n    '0%': {\n      opacity: 0,\n      margin: 0\n    },\n    '50%': {\n      opacity: 1,\n      margin: -5\n    },\n    '100%': {\n      opacity: 0,\n      margin: 0\n    }\n  },\n  text: {\n    '&:hover': {\n      color: theme.palette.error.main,\n      position: 'relative',\n      zIndex: 0,\n      '&:after': {\n        backgroundColor: 'rgba(255, 0, 0, .3)',\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        animation: '$zoom 0.75s infinite',\n        borderRadius: 45,\n        boxShadow: '0 0 0 8px rgba(255, 0, 0, .3)',\n        zIndex: -1\n      }\n    }\n  },\n  textSecondary: {\n    '&:disabled': {\n      color: theme.palette.error.main\n    }\n  },\n  textPrimary: {\n    '&:disabled': {\n      color: theme.palette.primary.main\n    }\n  }\n}))(Button)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat'\nimport StyledButton from './StyledButton'\n\nconst items = [\n  { status: 'none', color: 'default', icon: <GpsFixedIcon fontSize=\"inherit\" /> },\n  { status: 'error', color: 'primary', icon: <CloseIcon fontSize=\"inherit\" /> },\n  { status: 'success', color: 'secondary', icon: <DirectionsBoatIcon fontSize=\"inherit\" /> }\n]\nconst BoardItem = ({ status, onClick }) => {\n  const [showIcon, setShowIcon] = React.useState(false)\n  const item = items.find(option => option.status === status)\n\n  const handleIcon = (isActive) => {\n    if (status === 'none') setShowIcon(isActive)\n    else setShowIcon(true)\n  }\n\n  return (\n    <StyledButton\n      color={item.color}\n      variant=\"text\"\n      onMouseEnter={() => handleIcon(true)}\n      onMouseLeave={() => handleIcon(false)}\n      onClick={onClick}\n      disabled={status !== 'none'}\n    >\n      {showIcon && item.icon}\n    </StyledButton>\n  )\n}\n\nexport default BoardItem\n\nBoardItem.propTypes = {\n  onClick: PropTypes.func,\n  status: PropTypes.string\n}\n","import PropTypes from 'prop-types'\nimport { Box, Typography } from '@material-ui/core'\n\nconst Indicator = ({ text, description }) => {\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        gutterBottom\n        color=\"secondary\"\n      >\n        {text}\n      </Typography>\n      <Box mt={-3}>\n        <Typography variant=\"caption\">{description}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default Indicator\n\nIndicator.propTypes = {\n  text: PropTypes.any,\n  description: PropTypes.string\n}\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { gameStatsSelector } from '../../store/game/selectors'\nimport { Box, Paper, Typography } from '@material-ui/core'\nimport Indicator from './Indicator'\n\nconst Stats = () => {\n  const {\n    maxShotsNumber,\n    numberOfShotsPlayed,\n    hits,\n    downedShipsNumber\n  } = useRecoilValue(gameStatsSelector)\n\n  return (\n    <Paper>\n      <Box p={3}>\n        <Typography variant=\"h6\" color=\"primary\">Stats</Typography>\n        <Indicator text={maxShotsNumber} description=\"Shots allowed\" />\n        <Indicator text={numberOfShotsPlayed} description=\"Shots played\" />\n        <Indicator text={hits} description=\"Hits\" />\n        <Indicator text={downedShipsNumber} description=\"Downed Ships\" />\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Stats\n","const MAX_NUMBER_COLUMNS = 10\nexport const BOARD_ROWS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']\nexport const BOARD_COLS = [...new Array(MAX_NUMBER_COLUMNS).keys()].map(key => key + 1)\nexport const SHIPS = [\n  { size: 4 },\n  { size: 3 },\n  { size: 3 },\n  { size: 2 },\n  { size: 2 },\n  { size: 2 },\n  { size: 1 },\n  { size: 1 },\n  { size: 1 },\n  { size: 1 }\n]\n","export const getRandomItemFromList = (list) => {\n  const min = 0\n  const max = list.length\n  const position = getRandomNumber(min, max)\n  return list[position]\n}\n\nexport const getId = () => Math.round((Math.random() * 36 ** 12)).toString(36)\n\nconst getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min)) + min\n","import { BOARD_COLS, BOARD_ROWS, SHIPS } from './constants'\nimport * as helpers from './helpers'\n\nexport const getRandomShips = (boardPositions) => {\n  let positions = []\n  return SHIPS.map(({ size }, index) => {\n    let position, ship\n    let isValid = false\n    while (!isValid) {\n      position = helpers.getRandomItemFromList(boardPositions)\n      const axes = position.split('')\n      ship = getShip(axes, size)\n      if (!ship.success) continue\n\n      const positionExists = !!ship.positions.find(item => positions.includes(item))\n      if (positionExists) continue\n      positions = [...positions, ...ship.positions]\n      isValid = true\n    }\n    return {\n      ...ship,\n      id: index,\n      hits: 0,\n      size\n    }\n  })\n}\n\nconst getShip = (axes, size) => {\n  const orientationTypes = ['vertical', 'horizontal']\n  const orientation = helpers.getRandomItemFromList(orientationTypes)\n  const isVertical = orientation === 'vertical'\n  const listByOrientationType = isVertical ? BOARD_ROWS : BOARD_COLS\n  const [row, col] = axes\n  const axis = isVertical ? row : col\n  let positions = []\n  listByOrientationType.forEach(item => {\n    if (item < axis || positions.length >= size) return\n    const position = isVertical ? item + col : row + item\n    positions = [...positions, position]\n  })\n\n  return {\n    success: !!(positions.length === size),\n    orientation,\n    positions\n  }\n}\n","import { BOARD_COLS, BOARD_ROWS } from './constants'\nimport * as ship from './ship'\nimport * as helpers from './helpers'\n\nexport const getBoardHeaders = () => ({\n  rows: BOARD_ROWS,\n  cols: BOARD_COLS\n})\n\nexport const getPositions = () => {\n  return getAllPositions().map(position => ({\n    status: 'none',\n    position\n  }))\n}\n\nexport const getAllPositions = () => {\n  const allPositions = (total, row) => {\n    const positions = BOARD_COLS.map(col => row + col)\n    return [...total, ...positions]\n  }\n  return BOARD_ROWS.reduce(allPositions, [])\n}\n\nexport const createGame = (data) => {\n  return {\n    ...data,\n    id: helpers.getId(),\n    date: new Date()\n  }\n}\n\nexport const getRandomShips = () => ship.getRandomShips(getAllPositions())\n","import React from 'react'\nimport { useSetRecoilState } from 'recoil'\nimport {\n  gamePositionsState,\n  gameIsActiveState,\n  gameMaxShotsNumberState,\n  gameShipsState\n} from '../store/game/atoms'\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { getPositions, getRandomShips } from '../utils/game'\n\nconst levelItems = [\n  { label: 'Easy (infinity)', value: '-1' },\n  { label: 'Normal (100)', value: '100' },\n  { label: 'Hard (50)', value: '50' }\n]\n\nconst Setting = () => {\n  const setGamePositions = useSetRecoilState(gamePositionsState)\n  const setGameIsActive = useSetRecoilState(gameIsActiveState)\n  const setMaxShotsNumber = useSetRecoilState(gameMaxShotsNumberState)\n  const setGameShips = useSetRecoilState(gameShipsState)\n  const [attempts, setAttempts] = React.useState('')\n  const [level, setLevel] = React.useState('')\n\n  const handleAttempts = (event) => {\n    setAttempts(parseFloat(event.target.value) || '')\n    setLevel('')\n  }\n\n  const handleLevel = (event) => {\n    setAttempts('')\n    setLevel(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setGamePositions(getPositions())\n    setGameIsActive(true)\n    setGameShips(getRandomShips())\n    setMaxShotsNumber(Number(attempts || level))\n  }\n\n  return (\n    <Paper>\n      <Box p={3} textAlign=\"center\" maxWidth={400}>\n        <Typography variant=\"h6\" gutterBottom>SETTING</Typography>\n        <Divider />\n        <form onSubmit={handleSubmit}>\n          <FormControl component=\"fieldset\">\n            <TextField\n              placeholder=\"Enter attempts\"\n              variant=\"outlined\"\n              value={attempts}\n              onChange={handleAttempts}\n            />\n            <Box py={3}>\n              <FormLabel component=\"legend\">- or -</FormLabel>\n              <RadioGroup\n                aria-label=\"level\"\n                name=\"level\"\n                value={level}\n                onChange={handleLevel}\n              >\n                {levelItems.map(item => (\n                  <FormControlLabel\n                    key={item.value}\n                    value={item.value}\n                    control={<Radio />}\n                    label={item.label}\n                  />\n                ))}\n              </RadioGroup>\n            </Box>\n\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"large\"\n              disabled={!attempts && !level}\n            >\n              Play Now\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Setting\n","import { Button } from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n  gameIsActiveState,\n  gameInfinityState,\n  gameGamesState,\n  gameMaxShotsNumberState\n} from '../store/game/atoms'\nimport { gameStatsSelector } from '../store/game/selectors'\nimport { createGame } from '../utils/game'\n\nconst PlayAgainButton = () => {\n  const setGameIsActive = useSetRecoilState(gameIsActiveState)\n  const setMaxShotsNumber = useSetRecoilState(gameMaxShotsNumberState)\n  const setGames = useSetRecoilState(gameGamesState)\n  const stats = useRecoilValue(gameStatsSelector)\n  const infinity = useRecoilValue(gameInfinityState)\n\n  const handleClick = () => {\n    setGameIsActive(false)\n    setMaxShotsNumber(infinity)\n\n    const game = createGame(stats)\n    setGames(games => [...games, game])\n  }\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      startIcon={<ReplayIcon />}\n      onClick={handleClick}\n      fullWidth\n    >\n      Play again\n    </Button>\n  )\n}\n\nexport default PlayAgainButton\n","import { useHistory } from 'react-router-dom'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n  gameIsActiveState,\n  gameInfinityState,\n  gameGamesState,\n  gameMaxShotsNumberState\n} from '../store/game/atoms'\nimport { gameStatsSelector } from '../store/game/selectors'\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle\n} from '@material-ui/core'\nimport PlayAgainButton from './PlayAgainButton'\nimport { createGame } from '../utils/game'\n\nconst GameOverDialog = () => {\n  const history = useHistory()\n  const setGameIsActive = useSetRecoilState(gameIsActiveState)\n  const setMaxShotsNumber = useSetRecoilState(gameMaxShotsNumberState)\n  const setGames = useSetRecoilState(gameGamesState)\n  const stats = useRecoilValue(gameStatsSelector)\n  const infinity = useRecoilValue(gameInfinityState)\n\n  const handleClick = (action) => {\n    setGameIsActive(false)\n    setMaxShotsNumber(infinity)\n\n    const game = createGame(stats)\n    setGames(games => [...games, game])\n    if (action === 'toGoPage') history.push('/games')\n  }\n\n  return (\n    <Dialog\n      open={true}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      PaperProps={{\n        style: { backgroundColor: '#000' }\n      }}\n    >\n      <DialogTitle>\n        <Box textAlign=\"center\" px={4}>\n          Game Over!\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <PlayAgainButton />\n        <Box my={2}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => handleClick('toGoPage')}\n            fullWidth\n          >\n            Game Stats\n          </Button>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default GameOverDialog\n","import React from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { gameIsActiveState, gameShipsState, gamePositionsState } from '../store/game/atoms'\nimport { gameIsGameOverSelector } from '../store/game/selectors'\nimport { Box } from '@material-ui/core'\nimport Board from '../components/Board'\nimport BoardCell from '../components/Board/BoardCell'\nimport BoardItem from '../components/Board/BoardItem'\nimport Stats from '../components/Stats'\nimport Setting from '../components/Setting'\nimport GameOverDialog from '../components/GameOverDialog'\nimport PlayAgainButton from '../components/PlayAgainButton'\nimport { getBoardHeaders } from '../utils/game'\nimport { useSnackbar } from 'notistack'\n\nconst messages = {\n  hit: 'Shot hit the ship!',\n  downedShip: 'Success! Downed ship',\n  error: 'Missed shot!'\n}\n\nconst Home = () => {\n  const headers = getBoardHeaders()\n  const gameIsActive = useRecoilValue(gameIsActiveState)\n  const [gamePositions, setGamePositions] = useRecoilState(gamePositionsState)\n  const [gameShips, setGameShips] = useRecoilState(gameShipsState)\n  const isGameOver = useRecoilValue(gameIsGameOverSelector)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleShot = (shot) => {\n    const getShipByShot = gameShips.find(({ positions }) => positions.includes(shot))\n    let status = 'error'\n    if (getShipByShot) {\n      status = 'success'\n      const ships = gameShips.filter(({ id }) => id !== getShipByShot.id)\n      const ship = {\n        ...getShipByShot,\n        hits: getShipByShot.hits + 1\n      }\n      setGameShips([...ships, ship])\n      enqueueSnackbar(messages.hit, { variant: status })\n\n      const isDownedShip = ship.size === ship.hits\n      if (isDownedShip) enqueueSnackbar(messages.downedShip, { variant: status })\n    } else {\n      enqueueSnackbar(messages.error, { variant: status })\n    }\n    const positions = gamePositions.map(gamePosition => ({\n      position: gamePosition.position,\n      status: gamePosition.position === shot ? status : gamePosition.status\n    }))\n\n    setGamePositions(positions)\n  }\n\n  return (\n    <Box display=\"flex\">\n      {gameIsActive\n        ? <>\n            <Box>\n              <Board headers={headers}>\n                {gamePositions.map(({ position, status }) => (\n                  <BoardCell border key={position}>\n                    <BoardItem\n                      status={status}\n                      onClick={() => handleShot(position)}\n                    />\n                  </BoardCell>\n                ))}\n              </Board>\n            </Box>\n            <Box ml={3}>\n              <Box mb={2}>\n                <PlayAgainButton />\n              </Box>\n              <Stats />\n            </Box>\n            {isGameOver && <GameOverDialog />}\n          </>\n        : <Setting />\n      }\n    </Box>\n  )\n}\n\nexport default Home\n","import { useRecoilValue } from 'recoil'\nimport { gameGamesState } from '../store/game/atoms'\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core'\n\nconst Games = () => {\n  const games = useRecoilValue(gameGamesState)\n\n  return (\n    <Box maxWidth={980}>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"games\">\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell align=\"right\">Shots allowed</TableCell>\n              <TableCell align=\"right\">Shots played</TableCell>\n              <TableCell align=\"right\">Hits</TableCell>\n              <TableCell align=\"right\">Downed ships</TableCell>\n              <TableCell align=\"right\">Date</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {games.map((game, index) => (\n              <TableRow key={game.id}>\n                <TableCell component=\"th\" scope=\"row\">{index + 1}</TableCell>\n                <TableCell align=\"right\">{game.maxShotsNumber}</TableCell>\n                <TableCell align=\"right\">{game.numberOfShotsPlayed}</TableCell>\n                <TableCell align=\"right\">{game.hits}</TableCell>\n                <TableCell align=\"right\">{game.downedShipsNumber}</TableCell>\n                <TableCell align=\"right\">{game.date.toLocaleString()}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n}\n\nexport default Games\n","import { Box, Paper, Typography } from '@material-ui/core'\n\nconst NotFound = () => {\n  return (\n    <Paper>\n      <Box p={3}>\n      <Typography variant=\"h4\">\n        404 error page\n      </Typography>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default NotFound\n","import { RecoilRoot } from 'recoil'\nimport { SnackbarProvider } from 'notistack'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport LayoutMain from './layouts/Main'\nimport theme from './theme'\nimport * as pages from './pages'\n\nconst App = () => {\n  const muiTheme = createMuiTheme({ ...theme })\n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <SnackbarProvider>\n          <Router>\n            <LayoutMain>\n              <Switch>\n                <Route path=\"/games\" component={pages.Games} />\n                <Route path=\"/\" component={pages.Home} exact />\n                <Route component={pages.NotFound} />\n              </Switch>\n            </LayoutMain>\n          </Router>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </RecoilRoot>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}