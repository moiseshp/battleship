{"version":3,"sources":["layouts/Main.styles.js","layouts/Main.js","assets/images/Battleship_Background_1920x1080.jpg","theme.js","store/game/atoms.js","store/game/selectors.js","components/Board/BoardCell.js","components/Board/index.js","components/Board/StyledButton.js","components/Board/BoardItem.js","components/Stats/Indicator.js","components/Stats/index.js","utils/constants.js","utils/helpers.js","utils/ship.js","utils/game.js","components/Setting.js","components/GameOverDialog.js","pages/Home.js","pages/Games.js","pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","wrapper","display","aside","width","sidebar","position","top","spacing","content","marginLeft","items","name","route","Main","children","location","useLocation","classes","Box","className","p","textAlign","Paper","fontSize","mb","Typography","variant","color","process","map","item","my","Button","component","Link","to","pathname","size","fullWidth","pt","Date","getFullYear","typography","fontFamily","join","props","MuiButton","disableElevation","palette","type","background","paper","primary","main","secondary","error","overrides","MuiCssBaseline","body","backgroundImage","BodyBackground","backgroundSize","backgroundPosition","backgroundAttachment","root","borderRadius","MuiPaper","rounded","game","isActive","maxShotsNumber","positions","ships","games","infinity","gameIsActiveState","atom","key","default","gameMaxShotsNumberState","gamePositionsState","gameShipsState","gameInfinityState","gameGamesState","gameStatsSelector","selector","get","numberOfShotsPlayed","filter","status","length","hits","downedShipsNumber","gameIsGameOverSelector","box","border","borderWidth","undefined","borderStyle","borderColor","height","BoardCell","justifyContent","alignItems","Board","headers","boardWidth","cols","pr","rows","head","flexWrap","maxWidth","withStyles","boxShadow","padding","minWidth","opacity","margin","text","zIndex","backgroundColor","left","right","bottom","animation","textSecondary","textPrimary","icon","BoardItem","onClick","React","useState","showIcon","setShowIcon","find","option","handleIcon","StyledButton","onMouseEnter","onMouseLeave","disabled","Indicator","description","gutterBottom","mt","Stats","useRecoilValue","BOARD_ROWS","BOARD_COLS","Array","keys","SHIPS","getRandomItemFromList","list","max","getRandomNumber","min","Math","floor","random","getShip","axes","orientation","helpers","isVertical","listByOrientationType","row","col","axis","forEach","success","getAllPositions","reduce","total","getRandomShips","boardPositions","index","ship","isValid","split","includes","id","levelItems","label","value","Setting","setGamePositions","useSetRecoilState","setGameIsActive","setMaxShotsNumber","setGameShips","attempts","setAttempts","level","setLevel","Divider","onSubmit","event","preventDefault","Number","FormControl","TextField","placeholder","onChange","parseFloat","target","py","FormLabel","RadioGroup","aria-label","FormControlLabel","control","Radio","GameOverDialog","history","useHistory","setGames","stats","handleClick","action","data","round","toString","date","push","Dialog","open","aria-labelledby","aria-describedby","PaperProps","style","DialogTitle","px","DialogContent","startIcon","messages","Home","gameIsActive","useRecoilState","gamePositions","gameShips","isGameOver","enqueueSnackbar","useSnackbar","shot","getShipByShot","gamePosition","handleShot","ml","Games","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","toLocaleString","NotFound","App","muiTheme","createMuiTheme","ThemeProvider","CssBaseline","basename","path","pages","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33ba1d6f.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@material-ui/core/styles'\nconst aside = 330\n\nexport const useStyles = makeStyles((theme) =>\n  createStyles({\n    wrapper: {\n      display: 'flex'\n    },\n    aside: {\n      width: aside\n    },\n    sidebar: {\n      position: 'sticky',\n      top: theme.spacing(3)\n    },\n    content: {\n      width: `calc(100% - ${aside}px)`,\n      marginLeft: theme.spacing(3)\n    }\n  })\n)\n","import PropTypes from 'prop-types'\nimport { Link, useLocation } from 'react-router-dom'\nimport { Box, Button, Paper, Typography } from '@material-ui/core'\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat'\nimport { useStyles } from './Main.styles'\n\nconst items = [\n  { name: 'Board', route: '/' },\n  { name: 'Games', route: '/games' }\n]\n\nconst Main = ({ children }) => {\n  const location = useLocation()\n  const isCurrentRoute = (route) => route === location.pathname\n  const classes = useStyles()\n  return (\n    <Box className={classes.wrapper} p={3}>\n      <Box className={classes.aside} textAlign=\"center\">\n        <Paper className={classes.sidebar}>\n          <Box p={3}>\n            <DirectionsBoatIcon fontSize=\"large\" />\n            <Box mb={3}>\n              <Typography variant=\"h5\" color=\"secondary\">\n                {process.env.REACT_APP_NAME}\n              </Typography>\n            </Box>\n            {items.map(item => (\n              <Box my={1.5} key={item.name}>\n                <Button\n                  component={Link}\n                  to={item.route}\n                  color=\"default\"\n                  variant={isCurrentRoute(item.route) ? 'contained' : 'outlined'}\n                  size=\"large\"\n                  fullWidth\n                >\n                  {item.name}\n                </Button>\n              </Box>\n            ))}\n            <Box pt={2}>\n              <Typography variant=\"caption\">\n                {process.env.REACT_APP_AUTHOR}\n                <Box component=\"span\" color=\"secondary.main\"> &copy; </Box>\n                {(new Date()).getFullYear()}\n              </Typography>\n            </Box>\n          </Box>\n        </Paper>\n      </Box>\n      <Box className={classes.content}>\n        {children}\n      </Box>\n    </Box>\n  )\n}\n\nexport default Main\n\nMain.propTypes = {\n  children: PropTypes.element.isRequired\n}\n","export default __webpack_public_path__ + \"static/media/Battleship_Background_1920x1080.2e2018e3.jpg\";","import BodyBackground from './assets/images/Battleship_Background_1920x1080.jpg'\n\nconst theme = {\n  typography: {\n    fontFamily: [\n      '\"Sigmar One\"',\n      'Roboto',\n      'Arial',\n      'sans-serif'\n    ].join(','),\n    fontSize: 17\n  },\n  props: {\n    MuiButton: {\n      disableElevation: true\n    }\n  },\n  palette: {\n    type: 'dark',\n    background: {\n      paper: 'rgba(0, 0, 0, 0.6)'\n    },\n    primary: {\n      main: '#00ffd1'\n    },\n    secondary: {\n      main: '#ffbe00'\n    },\n    error: {\n      main: '#f00'\n    }\n  },\n  overrides: {\n    MuiCssBaseline: {\n      '@global': {\n        body: {\n          backgroundImage: `url(${BodyBackground})`,\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundAttachment: 'fixed'\n        }\n      }\n    },\n    MuiButton: {\n      root: {\n        borderRadius: 35\n      }\n    },\n    MuiPaper: {\n      rounded: {\n        borderRadius: 20\n      }\n    }\n  }\n}\n\nexport default theme\n","import { atom } from 'recoil'\nconst infinity = -1\nconst game = {\n  isActive: false,\n  maxShotsNumber: infinity,\n  positions: [],\n  ships: [],\n  games: [],\n  infinity\n}\n\nexport const gameIsActiveState = atom({\n  key: 'gameIsActiveState',\n  default: game.isActive\n})\n\nexport const gameMaxShotsNumberState = atom({\n  key: 'gamemaxShotsNumberState',\n  default: game.maxShotsNumber\n})\n\nexport const gamePositionsState = atom({\n  key: 'gamePositionsState',\n  default: game.positions\n})\n\nexport const gameShipsState = atom({\n  key: 'gameShipsState',\n  default: game.ships\n})\n\nexport const gameInfinityState = atom({\n  key: 'gameInfinityState',\n  default: game.infinity\n})\n\nexport const gameGamesState = atom({\n  key: 'gameGamesState',\n  default: game.games\n})\n","import { selector } from 'recoil'\nimport {\n  gameMaxShotsNumberState,\n  gamePositionsState,\n  gameShipsState,\n  gameInfinityState\n} from './atoms'\n\nexport const gameStatsSelector = selector({\n  key: 'gameStatsSelector',\n  get: ({ get }) => {\n    const infinity = get(gameInfinityState)\n    const maxShotsNumber = get(gameMaxShotsNumberState)\n    const positions = get(gamePositionsState)\n    const ships = get(gameShipsState)\n    const numberOfShotsPlayed = positions.filter(({ status }) => status !== 'none').length\n    const hits = positions.filter(({ status }) => status === 'success').length\n    const downedShipsNumber = ships.filter(({ size, hits }) => size === hits).length\n\n    return {\n      maxShotsNumber: maxShotsNumber === infinity ? 'Infinity' : maxShotsNumber,\n      numberOfShotsPlayed,\n      hits,\n      downedShipsNumber\n    }\n  }\n})\n\nexport const gameIsGameOverSelector = selector({\n  key: 'gameIsGameOverSelector',\n  get: ({ get }) => {\n    const ships = get(gameShipsState)\n    const downedShipsNumber = ships.filter(({ size, hits }) => size === hits).length\n    const allTheShipsHaveBeenShotDown = downedShipsNumber === ships.length\n    if (allTheShipsHaveBeenShotDown) return true\n\n    const maxShotsNumber = get(gameMaxShotsNumberState)\n    const infinity = get(gameInfinityState)\n    const positions = get(gamePositionsState)\n    const numberOfShotsPlayed = positions.filter(({ status }) => status !== 'none').length\n    if (maxShotsNumber !== infinity && numberOfShotsPlayed >= maxShotsNumber) return true\n\n    return false\n  }\n})\n","import PropTypes from 'prop-types'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport { Box } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    box: ({ border }) => ({\n      borderWidth: border ? 1 : undefined,\n      borderStyle: border ? 'solid' : undefined,\n      borderColor: theme.palette.primary.main,\n      borderRadius: 8,\n      width: 55,\n      height: 55\n    })\n  })\n)\n\nconst BoardCell = ({ border, children }) => {\n  const classes = useStyles({ border })\n  return (\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      className={classes.box}\n      color=\"primary.main\"\n    >\n      {children}\n    </Box>\n  )\n}\n\nexport default BoardCell\n\nBoardCell.propTypes = {\n  children: PropTypes.node,\n  border: PropTypes.bool\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Box, Paper } from '@material-ui/core'\nimport BoardCell from './BoardCell'\n\nconst Board = ({ headers, children }) => {\n  const boxWidth = 55\n  const boardWidth = boxWidth * headers.cols.length\n\n  return (\n    <Paper>\n      <Box display=\"flex\" pt={2} pr={2}>\n        <Box width={boxWidth}>\n          {headers.rows.map(head => (\n            <BoardCell key={head}>\n              {head}\n            </BoardCell>)\n          )}\n        </Box>\n        <Box>\n          <Box display=\"flex\" flexWrap=\"wrap\" maxWidth={boardWidth}>\n            {children}\n          </Box>\n          <Box display=\"flex\">\n            {headers.cols.map(head => (\n              <BoardCell key={head}>\n                {head}\n              </BoardCell>)\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Board\n\nBoard.propTypes = {\n  children: PropTypes.node.isRequired,\n  headers: PropTypes.object\n}\n","import { withStyles } from '@material-ui/core/styles'\nimport { Button } from '@material-ui/core'\n\nexport default withStyles((theme) => ({\n  root: {\n    display: 'flex',\n    boxShadow: 'none',\n    padding: 0,\n    minWidth: 'auto',\n    width: '100%',\n    height: '100%',\n    color: 'white',\n    borderRadius: 0,\n    fontSize: 35\n  },\n  '@keyframes zoom': {\n    '0%': {\n      opacity: 0,\n      margin: 0\n    },\n    '50%': {\n      opacity: 1,\n      margin: -5\n    },\n    '100%': {\n      opacity: 0,\n      margin: 0\n    }\n  },\n  text: {\n    '&:hover': {\n      color: theme.palette.error.main,\n      position: 'relative',\n      zIndex: 0,\n      '&:after': {\n        backgroundColor: 'rgba(255, 0, 0, .3)',\n        content: '\"\"',\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        animation: '$zoom 0.75s infinite',\n        borderRadius: 45,\n        boxShadow: '0 0 0 8px rgba(255, 0, 0, .3)',\n        zIndex: -1\n      }\n    }\n  },\n  textSecondary: {\n    '&:disabled': {\n      color: theme.palette.error.main\n    }\n  },\n  textPrimary: {\n    '&:disabled': {\n      color: theme.palette.primary.main\n    }\n  }\n}))(Button)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GpsFixedIcon from '@material-ui/icons/GpsFixed'\nimport CloseIcon from '@material-ui/icons/Close'\nimport DirectionsBoatIcon from '@material-ui/icons/DirectionsBoat'\nimport StyledButton from './StyledButton'\n\nconst items = [\n  { status: 'none', color: 'default', icon: <GpsFixedIcon fontSize=\"inherit\" /> },\n  { status: 'error', color: 'primary', icon: <CloseIcon fontSize=\"inherit\" /> },\n  { status: 'success', color: 'secondary', icon: <DirectionsBoatIcon fontSize=\"inherit\" /> }\n]\nconst BoardItem = ({ status, onClick }) => {\n  const [showIcon, setShowIcon] = React.useState(false)\n  const item = items.find(option => option.status === status)\n\n  const handleIcon = (isActive) => {\n    if (status === 'none') setShowIcon(isActive)\n    else setShowIcon(true)\n  }\n\n  return (\n    <StyledButton\n      color={item.color}\n      variant=\"text\"\n      onMouseEnter={() => handleIcon(true)}\n      onMouseLeave={() => handleIcon(false)}\n      onClick={onClick}\n      disabled={status !== 'none'}\n    >\n      {showIcon && item.icon}\n    </StyledButton>\n  )\n}\n\nexport default BoardItem\n\nBoardItem.propTypes = {\n  onClick: PropTypes.func,\n  status: PropTypes.string\n}\n","import PropTypes from 'prop-types'\nimport { Box, Typography } from '@material-ui/core'\n\nconst Indicator = ({ text, description }) => {\n  return (\n    <>\n      <Typography\n        variant=\"h4\"\n        gutterBottom\n        color=\"secondary\"\n      >\n        {text}\n      </Typography>\n      <Box mt={-3}>\n        <Typography variant=\"caption\">{description}</Typography>\n      </Box>\n    </>\n  )\n}\n\nexport default Indicator\n\nIndicator.propTypes = {\n  text: PropTypes.any,\n  description: PropTypes.string\n}\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { gameStatsSelector } from '../../store/game/selectors'\nimport { Box, Paper, Typography } from '@material-ui/core'\nimport Indicator from './Indicator'\n\nconst Stats = () => {\n  const {\n    maxShotsNumber,\n    numberOfShotsPlayed,\n    hits,\n    downedShipsNumber\n  } = useRecoilValue(gameStatsSelector)\n\n  return (\n    <Paper>\n      <Box p={3}>\n        <Typography variant=\"h6\" color=\"primary\">Stats</Typography>\n        <Indicator text={maxShotsNumber} description=\"Shots allowed\" />\n        <Indicator text={numberOfShotsPlayed} description=\"Shots played\" />\n        <Indicator text={hits} description=\"Hits\" />\n        <Indicator text={downedShipsNumber} description=\"Downed Ships\" />\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Stats\n","const MAX_NUMBER_COLUMNS = 10\nexport const BOARD_ROWS = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J']\nexport const BOARD_COLS = [...new Array(MAX_NUMBER_COLUMNS).keys()].map(key => key + 1)\nexport const SHIPS = [\n  { size: 4 },\n  { size: 3 },\n  { size: 3 },\n  { size: 2 },\n  { size: 2 },\n  { size: 2 },\n  { size: 1 },\n  { size: 1 },\n  { size: 1 },\n  { size: 1 }\n]\n","export const getRandomItemFromList = (list) => {\n  const min = 0\n  const max = list.length\n  const position = getRandomNumber(min, max)\n  return list[position]\n}\n\nexport const getId = () => Math.round((Math.random() * 36 ** 12)).toString(36)\n\nconst getRandomNumber = (min, max) => Math.floor(Math.random() * (max - min)) + min\n","import { BOARD_COLS, BOARD_ROWS, SHIPS } from './constants'\nimport * as helpers from './helpers'\n\nexport const getRandomShips = (boardPositions) => {\n  let positions = []\n  return SHIPS.map(({ size }, index) => {\n    let position, ship\n    let isValid = false\n    while (!isValid) {\n      position = helpers.getRandomItemFromList(boardPositions)\n      const axes = position.split('')\n      ship = getShip(axes, size)\n      if (!ship.success) continue\n\n      const positionExists = !!ship.positions.find(item => positions.includes(item))\n      if (positionExists) continue\n      positions = [...positions, ...ship.positions]\n      isValid = true\n    }\n    return {\n      ...ship,\n      id: index,\n      hits: 0,\n      size\n    }\n  })\n}\n\nconst getShip = (axes, size) => {\n  const orientationTypes = ['vertical', 'horizontal']\n  const orientation = helpers.getRandomItemFromList(orientationTypes)\n  const isVertical = orientation === 'vertical'\n  const listByOrientationType = isVertical ? BOARD_ROWS : BOARD_COLS\n  const [row, col] = axes\n  const axis = isVertical ? row : col\n  let positions = []\n  listByOrientationType.forEach(item => {\n    if (item < axis || positions.length >= size) return\n    const position = isVertical ? item + col : row + item\n    positions = [...positions, position]\n  })\n\n  return {\n    success: !!(positions.length === size),\n    orientation,\n    positions\n  }\n}\n","import { BOARD_COLS, BOARD_ROWS } from './constants'\nimport * as ship from './ship'\nimport * as helpers from './helpers'\n\nexport const getBoardHeaders = () => ({\n  rows: BOARD_ROWS,\n  cols: BOARD_COLS\n})\n\nexport const getPositions = () => {\n  return getAllPositions().map(position => ({\n    status: 'none',\n    position\n  }))\n}\n\nexport const getAllPositions = () => {\n  const allPositions = (total, row) => {\n    const positions = BOARD_COLS.map(col => row + col)\n    return [...total, ...positions]\n  }\n  return BOARD_ROWS.reduce(allPositions, [])\n}\n\nexport const createGame = (data) => {\n  return {\n    ...data,\n    id: helpers.getId(),\n    date: new Date()\n  }\n}\n\nexport const getRandomShips = () => ship.getRandomShips(getAllPositions())\n","import React from 'react'\nimport { useSetRecoilState } from 'recoil'\nimport {\n  gamePositionsState,\n  gameIsActiveState,\n  gameMaxShotsNumberState,\n  gameShipsState\n} from '../store/game/atoms'\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Paper,\n  Radio,\n  RadioGroup,\n  TextField,\n  Typography\n} from '@material-ui/core'\nimport { getPositions, getRandomShips } from '../utils/game'\n\nconst levelItems = [\n  { label: 'Easy (infinity)', value: '-1' },\n  { label: 'Normal (100)', value: '100' },\n  { label: 'Hard (50)', value: '50' }\n]\n\nconst Setting = () => {\n  const setGamePositions = useSetRecoilState(gamePositionsState)\n  const setGameIsActive = useSetRecoilState(gameIsActiveState)\n  const setMaxShotsNumber = useSetRecoilState(gameMaxShotsNumberState)\n  const setGameShips = useSetRecoilState(gameShipsState)\n  const [attempts, setAttempts] = React.useState('')\n  const [level, setLevel] = React.useState('')\n\n  const handleAttempts = (event) => {\n    setAttempts(parseFloat(event.target.value) || '')\n    setLevel('')\n  }\n\n  const handleLevel = (event) => {\n    setAttempts('')\n    setLevel(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setGamePositions(getPositions())\n    setGameIsActive(true)\n    setGameShips(getRandomShips())\n    setMaxShotsNumber(Number(attempts || level))\n  }\n\n  return (\n    <Paper>\n      <Box p={3} textAlign=\"center\" maxWidth={400}>\n        <Typography variant=\"h6\" gutterBottom>SETTING</Typography>\n        <Divider />\n        <form onSubmit={handleSubmit}>\n          <FormControl component=\"fieldset\">\n            <TextField\n              placeholder=\"Enter attempts\"\n              variant=\"outlined\"\n              value={attempts}\n              onChange={handleAttempts}\n            />\n            <Box py={3}>\n              <FormLabel component=\"legend\">- or -</FormLabel>\n              <RadioGroup\n                aria-label=\"level\"\n                name=\"level\"\n                value={level}\n                onChange={handleLevel}\n              >\n                {levelItems.map(item => (\n                  <FormControlLabel\n                    key={item.value}\n                    value={item.value}\n                    control={<Radio />}\n                    label={item.label}\n                  />\n                ))}\n              </RadioGroup>\n            </Box>\n\n            <Button\n              type=\"submit\"\n              variant=\"outlined\"\n              color=\"primary\"\n              size=\"large\"\n              disabled={!attempts && !level}\n            >\n              Play Now\n            </Button>\n          </FormControl>\n        </form>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default Setting\n","import { useHistory } from 'react-router-dom'\nimport { useRecoilValue, useSetRecoilState } from 'recoil'\nimport {\n  gameIsActiveState,\n  gameInfinityState,\n  gameGamesState,\n  gameMaxShotsNumberState\n} from '../store/game/atoms'\nimport { gameStatsSelector } from '../store/game/selectors'\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogContent,\n  DialogTitle\n} from '@material-ui/core'\nimport ReplayIcon from '@material-ui/icons/Replay'\nimport { createGame } from '../utils/game'\n\nconst GameOverDialog = () => {\n  const history = useHistory()\n  const setGameIsActive = useSetRecoilState(gameIsActiveState)\n  const setMaxShotsNumber = useSetRecoilState(gameMaxShotsNumberState)\n  const setGames = useSetRecoilState(gameGamesState)\n  const stats = useRecoilValue(gameStatsSelector)\n  const infinity = useRecoilValue(gameInfinityState)\n\n  const handleClick = (action) => {\n    setGameIsActive(false)\n    setMaxShotsNumber(infinity)\n\n    const game = createGame(stats)\n    setGames(games => [...games, game])\n    if (action === 'toGoPage') history.push('/games')\n  }\n\n  return (\n    <Dialog\n      open={true}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n      PaperProps={{\n        style: { backgroundColor: '#000' }\n      }}\n    >\n      <DialogTitle>\n        <Box textAlign=\"center\" px={4}>\n          Game Over!\n        </Box>\n      </DialogTitle>\n      <DialogContent>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          startIcon={<ReplayIcon />}\n          onClick={handleClick}\n          fullWidth\n        >\n          Play again\n        </Button>\n        <Box my={2}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            onClick={() => handleClick('toGoPage')}\n            fullWidth\n          >\n            Game Stats\n          </Button>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default GameOverDialog\n","import React from 'react'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { gameIsActiveState, gameShipsState, gamePositionsState } from '../store/game/atoms'\nimport { gameIsGameOverSelector } from '../store/game/selectors'\nimport { Box } from '@material-ui/core'\nimport Board from '../components/Board'\nimport BoardCell from '../components/Board/BoardCell'\nimport BoardItem from '../components/Board/BoardItem'\nimport Stats from '../components/Stats'\nimport Setting from '../components/Setting'\nimport GameOverDialog from '../components/GameOverDialog'\nimport { getBoardHeaders } from '../utils/game'\nimport { useSnackbar } from 'notistack'\n\nconst messages = {\n  hit: 'Shot hit the ship!',\n  downedShip: 'Success! Downed ship',\n  error: 'Missed shot!'\n}\n\nconst Home = () => {\n  const headers = getBoardHeaders()\n  const gameIsActive = useRecoilValue(gameIsActiveState)\n  const [gamePositions, setGamePositions] = useRecoilState(gamePositionsState)\n  const [gameShips, setGameShips] = useRecoilState(gameShipsState)\n  const isGameOver = useRecoilValue(gameIsGameOverSelector)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const handleShot = (shot) => {\n    const getShipByShot = gameShips.find(({ positions }) => positions.includes(shot))\n    let status = 'error'\n    if (getShipByShot) {\n      status = 'success'\n      const ships = gameShips.filter(({ id }) => id !== getShipByShot.id)\n      const ship = {\n        ...getShipByShot,\n        hits: getShipByShot.hits + 1\n      }\n      setGameShips([...ships, ship])\n      enqueueSnackbar(messages.hit, { variant: status })\n\n      const isDownedShip = ship.size === ship.hits\n      if (isDownedShip) enqueueSnackbar(messages.downedShip, { variant: status })\n    } else {\n      enqueueSnackbar(messages.error, { variant: status })\n    }\n    const positions = gamePositions.map(gamePosition => ({\n      position: gamePosition.position,\n      status: gamePosition.position === shot ? status : gamePosition.status\n    }))\n\n    setGamePositions(positions)\n  }\n\n  return (\n    <Box display=\"flex\">\n      {gameIsActive\n        ? <>\n            <Box>\n              <Board headers={headers}>\n                {gamePositions.map(({ position, status }) => (\n                  <BoardCell border key={position}>\n                    <BoardItem\n                      status={status}\n                      onClick={() => handleShot(position)}\n                    />\n                  </BoardCell>\n                ))}\n              </Board>\n            </Box>\n            <Box ml={3}>\n              <Stats />\n            </Box>\n            {isGameOver && <GameOverDialog />}\n          </>\n        : <Setting />\n      }\n    </Box>\n  )\n}\n\nexport default Home\n","import { useRecoilValue } from 'recoil'\nimport { gameGamesState } from '../store/game/atoms'\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper\n} from '@material-ui/core'\n\nconst Games = () => {\n  const games = useRecoilValue(gameGamesState)\n\n  return (\n    <Box maxWidth={980}>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"games\">\n          <TableHead>\n            <TableRow>\n              <TableCell>#</TableCell>\n              <TableCell align=\"right\">Shots allowed</TableCell>\n              <TableCell align=\"right\">Shots played</TableCell>\n              <TableCell align=\"right\">Hits</TableCell>\n              <TableCell align=\"right\">Downed ships</TableCell>\n              <TableCell align=\"right\">Date</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {games.map((game, index) => (\n              <TableRow key={game.id}>\n                <TableCell component=\"th\" scope=\"row\">{index + 1}</TableCell>\n                <TableCell align=\"right\">{game.maxShotsNumber}</TableCell>\n                <TableCell align=\"right\">{game.numberOfShotsPlayed}</TableCell>\n                <TableCell align=\"right\">{game.hits}</TableCell>\n                <TableCell align=\"right\">{game.downedShipsNumber}</TableCell>\n                <TableCell align=\"right\">{game.date.toLocaleString()}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  )\n}\n\nexport default Games\n","import { Box, Paper, Typography } from '@material-ui/core'\n\nconst NotFound = () => {\n  return (\n    <Paper>\n      <Box p={3}>\n      <Typography variant=\"h4\">\n        404 error page\n      </Typography>\n      </Box>\n    </Paper>\n  )\n}\n\nexport default NotFound\n","import { RecoilRoot } from 'recoil'\nimport { SnackbarProvider } from 'notistack'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport LayoutMain from './layouts/Main'\nimport theme from './theme'\nimport * as pages from './pages'\n\nconst App = () => {\n  const muiTheme = createMuiTheme({ ...theme })\n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={muiTheme}>\n        <CssBaseline />\n        <SnackbarProvider>\n          <Router basename={process.env.PUBLIC_URL}>\n            <LayoutMain>\n              <Switch>\n                <Route path=\"/games\" component={pages.Games} />\n                <Route path=\"/\" component={pages.Home} exact />\n                <Route component={pages.NotFound} />\n              </Switch>\n            </LayoutMain>\n          </Router>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </RecoilRoot>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}